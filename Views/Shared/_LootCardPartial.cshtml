@model TauManager.ViewModels.LootItemViewModel
<div class="text-center@(Model.ShowSingleItemInterface ? "" : " card")" id="card_loot_@Model.Loot.Id">
    <img class="card-img-top" src="@Model.Loot.Item.ImageUrl" alt="Item image" style="max-width: 150px; max-height: 150px;"/>
    <div class="card-body">
        <ul class="list-group list-group-flush">
            <li class="list-group-item">
                <h5 class="card-title"><a href="@Model.Loot.Item.Url">@Model.Loot.Item.Name</a></h5>
                <p class="card-text">
                @if(Model.Loot.Item.Type == TauManager.Models.Item.ItemType.Weapon ||
                    Model.Loot.Item.Type == TauManager.Models.Item.ItemType.Armor)
                {
                    @Model.Loot.Item.CampaignOverviewCaption
                } else {
                    @Model.Loot.Item.Caption
                }
                </p>
            </li>
@if(!Model.ShowEditControls)
{
        // Requests only show for items without owners
        // It meanst that once you assign an item to someone, they won't show
        // If that's a problem, remove this condition
        @if (!Model.Loot.HolderId.HasValue)
        {
            <li class="list-group-item">
                Existing requests:
                @if (Model.AllRequests == null || Model.AllRequests.Count == 0)
                {
                    <i>None</i>
                } else {
                    <ul>
                    @foreach (var playerPosition in Model.AllRequests.Keys)
                    {
                        <li>
                            (@playerPosition) @Model.AllRequests[playerPosition]
                        @if (Model.SpecialRequests.ContainsKey(playerPosition)) {
                            @:&nbsp;<i class="fas fa-exclamation-circle text-primary" title="@Model.SpecialRequests[playerPosition]"></i>
                        }
                        </li>
                    }
                    </ul>
                }
            </li>
        }
            <li class="list-group-item">
                <label for="select_loot_item_status_@(Model.Loot.Id)">Status: @(Model.Loot.Status)</label>
            </li>
        @if (Model.Loot.HolderId.HasValue)
        {
            <li class="list-group-item">
                <label for="select_loot_item_holder_@(Model.Loot.Id)">Holder: @(Model.Loot.Holder.Name)</label>
            </li>
        }
}
        @if (Model.ShowApplyButton)
        {
            <li class="list-group-item">
            @if (Model.ShowSingleItemInterface)
            {
                <form action="/Campaigns/ApplyForLoot/@Model.Loot.Id" method="post">
                    <div class="form-group">
                        <label for="radio_apply_normal">
                            <input type="radio" name="specialOffer" id="radio_apply_normal" value="False"@(Model.RequestExists ? Model.Request.Status == LootRequest.LootRequestStatus.Interested ? " checked" : "" : " checked")>
                            Apply without special offer (default)
                        </label>
                    </div>
                    <div class="form-group">
                        <label for="radio_apply_special">
                            <input type="radio" name="specialOffer" id="radio_apply_special" value="True"@(Model.RequestExists && Model.Request.Status == LootRequest.LootRequestStatus.SpecialOffer ? " checked" : "")>
                            Apply with a special offer (specify below)
                        </label>
                        <textarea class="form-control" id="ta_special_request" name="comments">@(Model.RequestExists ? Model.Request.SpecialOfferDescription : "")</textarea>
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-success">@(Model.RequestExists ? "Save" : "Apply")</button>
                        @if(Model.RequestExists)
                        {
                            <button type="submit" name="deleteRequest" value="true" class="btn btn-danger">Withdraw</button>
                        }
                    </div>
                </form>
            } else {
                if(Model.RequestExists)
                {
                    <a asp-action="ApplyForLoot" asp-route-id="@Model.Loot.Id" class="btn btn-warning">Edit or Withdraw</a>
                } else {
                    <a asp-action="ApplyForLoot" asp-route-id="@Model.Loot.Id" class="btn @(Model.TierRestriction ? "btn-danger" : "btn-success")">Apply@(Model.TierRestriction ? " (higher than your tier!)" : "")</a>
                }
            }
            </li>
        }
        @if(Model.ShowAwardButton)
        {
            <li class="list-group-item">
                <input type="button" class="btn_award_loot btn btn-primary" value="Award" data-id="@Model.Loot.Id" data-name="@Model.Loot.Item.Name" data-toggle="modal" data-target="#modal_award_loot">
            </li>
        }
        @if(Model.ShowEditControls)
        {
            <li class="list-group-item">
                <label for="select_loot_item_status_@(Model.Loot.Id)">Status:</label>
                <select id="select_loot_item_status_@(Model.Loot.Id)" class="select-loot-item-status" data-id="@Model.Loot.Id">
                @foreach (var status in Model.LootStatuses.Keys)
                {
                    <!option value="@status"@((int)Model.Loot.Status == status ? " selected" : "")>@(Model.LootStatuses[status])</!option>
                }    
                </select>
            </li>
            <li class="list-group-item">
                <label for="select_loot_item_holder_@(Model.Loot.Id)">Holder:</label>
                <select id="select_loot_item_holder_@(Model.Loot.Id)" class="select-loot-item-holder" data-id="@Model.Loot.Id">
                    <!option value="0"@(Model.Loot.HolderId.HasValue && Model.Loot.HolderId.Value == 0 ? " selected" : "")><i>--Unassigned--</i></!option>
                @foreach (var player in Model.Players)
                {
                    <!option value="@player.Id"@(Model.Loot.HolderId.HasValue && Model.Loot.HolderId.Value == player.Id ? " selected" : "")>@(player.Name)</!option>
                }    
                </select>
            </li>
        }
        </ul>
    </div>
</div>