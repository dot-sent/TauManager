@model TauManager.ViewModels.PlayerChartParamsViewModel

<script type="text/javascript" src="/lib/chart/Chart.bundle.min.js"></script>
<script type="text/javascript">
    // Function credits: https://stackoverflow.com/a/10958973/625594
    var getCSS = function (prop, fromClass) {

        var $inspector = $("<div>").css('display', 'none').addClass(fromClass);
        $("body").append($inspector); // add to DOM, in order to read the CSS property
        try {
            return $inspector.css(prop);
        } finally {
            $inspector.remove(); // and remove from DOM
        }
    };

    var playerId = @(Model.Player.Id);
    var url = '@(Model.UseManagementUrl ? "/SyndicateManagement/PlayerDetailsChartData" : "/Home/PlayerDetailsChartData")';
    var chartObj = undefined;
    var color1 = getCSS('color', 'text-success');
    var color2 = getCSS('color', 'text-info');
    console.log("Color1 = " + color1 + ", color2 = " + color2);
    function reloadChart(){
        if (chartObj != undefined) {
            chartObj.destroy();
        }
        var ctxStats = $('#canvas_stats');
        var dataKind1 = $('input[name="dataKind1"]:checked').val();
        var label1 = $('input[name="dataKind1"]:checked').parent().text();
        var firstGraphBase = $('input[name="firstGraphBase"]:checked').val();
        var dataKind2 = $('input[name="dataKind2"]:checked').val();
        var secondGraphBase = $('input[name="secondGraphBase"]:checked').val();
        var label2 = $('input[name="dataKind2"]:checked').parent().text();
        var interval = $('input[name="interval"]:checked').val();
        var ticks1 = { fontColor: color1 };
        var ticks2 = { fontColor: color2 };
        if (firstGraphBase == 1) {
            ticks1.min = 0;    
        }
        if (secondGraphBase == 1) {
            ticks2.min = 0;    
        }
        $.post(url,
            {
                @(Model.UseManagementUrl ? "id: playerId," : "")
                dataKind: dataKind1,
                interval: interval
            },
            function(data){
                if (dataKind2 < 254) {
                $.post(url,
                    {
                        @(Model.UseManagementUrl ? "id: playerId," : "")
                        dataKind: dataKind2,
                        interval: interval
                    },
                    function(data2) {
                        chartObj = new Chart(ctxStats, {
                            type: 'line',
                            data: {
                                datasets: [{
                                    label: label1,
                                    data: data,
                                    borderColor: color1,
                                    borderWidth: 2,
                                    fill: false,
                                    yAxisID: 'first-y-axis'
                                },
                                {
                                    label: label2,
                                    data: data2,
                                    borderColor: color2,
                                    borderWidth: 2,
                                    fill: false,
                                    yAxisID: 'second-y-axis'
                                }]
                            },
                            options: {
                                scales: {
                                    xAxes: [{
                                        type: 'time'
                                    }],
                                    yAxes: [{
                                        id: 'first-y-axis',
                                        type: 'linear',
                                        position: 'left',
                                        ticks: ticks1
                                    },
                                    {
                                        id: 'second-y-axis',
                                        type: 'linear',
                                        position: 'right',
                                        ticks: ticks2
                                    }]
                                },
                                elements: {
                                    line: {
                                        tension: 0 // disables bezier curves
                                    }
                                },
                                tooltips: {
                                    mode: 'x'
                                },
                                events: ['click', 'mousemove']
                            }
                        });
                    }
                );
                } else {
                    chartObj = new Chart(ctxStats, {
                        type: 'line',
                        data: {
                            datasets: [{
                                label: label1,
                                data: data,
                                borderColor: color1,
                                borderWidth: 2,
                                fill: false
                            }]
                        },
                        options: {
                            scales: {
                                xAxes: [{
                                    type: 'time'
                                }],
                                yAxes: [{
                                        ticks: ticks1
                                    }
                                ]
                            },
                            elements: {
                                line: {
                                    tension: 0 // disables bezier curves
                                }
                            },
                            events: ['click', 'mousemove']
                        }
                    });                  
                }
            }
        )
    }

    $(function() {
        $('.chart-radio').change(reloadChart);
        reloadChart();
    });

</script>